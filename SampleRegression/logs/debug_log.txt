Inferring Columns ...
Creating Data loader ...
Loading data ...
Exploring multiple ML algorithms and settings to find you the best model for ML task: regression
For further learning check: https://aka.ms/mlnet-cli
|     Trainer                             RSquared Absolute-loss Squared-loss RMS-loss  Duration #Iteration      |
[Source=AutoML, Kind=Trace] Channel started
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} xf=Normalizing{ col=Features:Features} tr=SdcaRegression{}  cache=+
[Source=AutoML, Kind=Trace] 1	0.89789642176061	00:00:01.2770028	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} xf=Normalizing{ col=Features:Features} tr=SdcaRegression{}  cache=+
|1    SdcaRegression                        0.8979          0.83         9.70     3.11       1.3          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=LightGbmRegression{}  cache=-
[Source=AutoML, Kind=Trace] 2	0.945077572629748	00:00:01.0515448	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=LightGbmRegression{}  cache=-
|2    LightGbmRegression                    0.9451          0.41         5.22     2.28       1.1          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeRegression{}  cache=-
[Source=AutoML, Kind=Trace] 3	0.943969032713311	00:00:01.0649545	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeRegression{}  cache=-
|3    FastTreeRegression                    0.9440          0.42         5.32     2.31       1.1          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeTweedieRegression{}  cache=-
[Source=AutoML, Kind=Trace] 4	0.937047449999493	00:00:01.2158422	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeTweedieRegression{}  cache=-
|4    FastTreeTweedieRegression             0.9370          0.42         5.98     2.44       1.2          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastForestRegression{}  cache=-
[Source=AutoML, Kind=Trace] 5	0.89486956995188	00:00:01.3126115	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastForestRegression{}  cache=-
|5    FastForestRegression                  0.8949          1.08         9.98     3.16       1.3          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} xf=Normalizing{ col=Features:Features} tr=LbfgsPoissonRegression{}  cache=+
[Source=AutoML, Kind=Trace] 6	0.67482509952223	00:00:01.1455258	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} xf=Normalizing{ col=Features:Features} tr=LbfgsPoissonRegression{}  cache=+
|6    LbfgsPoissonRegression                0.6748          2.88        30.88     5.56       1.1          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} xf=Normalizing{ col=Features:Features} tr=OnlineGradientDescentRegression{}  cache=+
[Source=AutoML, Kind=Trace] 7	0.392590689394987	00:00:00.3771007	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} xf=Normalizing{ col=Features:Features} tr=OnlineGradientDescentRegression{}  cache=+
|7    OnlineGradientDescentRegression       0.3926          4.54        57.68     7.59       0.4          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} xf=Normalizing{ col=Features:Features} tr=OlsRegression{}  cache=-
[Source=AutoML, Kind=Trace] 8	0.901595901711487	00:00:00.4867472	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} xf=Normalizing{ col=Features:Features} tr=OlsRegression{}  cache=-
|8    OlsRegression                         0.9016          0.74         9.34     3.06       0.5          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=LightGbmRegression{NumberOfIterations:150, LearningRate:0.02953049, NumberOfLeaves:3, MinimumExampleCountPerLeaf:20, UseCategoricalSplit:True, HandleMissingValue:False, MinimumExampleCountPerGroup:100, MaximumCategoricalSplitPointCount:64, CategoricalSmoothing:1, L2CategoricalRegularization:1, L2Regularization:0, L1Regularization:0.5}  cache=-
[Source=AutoML, Kind=Trace] 9	0.911563443182253	00:00:02.1029223	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=LightGbmRegression{NumberOfIterations:150, LearningRate:0.02953049, NumberOfLeaves:3, MinimumExampleCountPerLeaf:20, UseCategoricalSplit:True, HandleMissingValue:False, MinimumExampleCountPerGroup:100, MaximumCategoricalSplitPointCount:64, CategoricalSmoothing:1, L2CategoricalRegularization:1, L2Regularization:0, L1Regularization:0.5}  cache=-
|9    LightGbmRegression                    0.9116          0.74         8.40     2.90       2.1          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeRegression{NumberOfLeaves:4, MinimumExampleCountPerLeaf:50, NumberOfTrees:20, LearningRate:0.06400397, Shrinkage:0.06221604}  cache=-
[Source=AutoML, Kind=Trace] 10	-1.13220740998135	00:00:00.6419919	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeRegression{NumberOfLeaves:4, MinimumExampleCountPerLeaf:50, NumberOfTrees:20, LearningRate:0.06400397, Shrinkage:0.06221604}  cache=-
|10   FastTreeRegression                   -1.1322         10.87       202.47    14.23       0.6          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeTweedieRegression{NumberOfLeaves:127, MinimumExampleCountPerLeaf:50, NumberOfTrees:20, LearningRate:0.0303671, Shrinkage:0.06052992}  cache=-
[Source=AutoML, Kind=Trace] 11	-1.19655427710479	00:00:06.2996581	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeTweedieRegression{NumberOfLeaves:127, MinimumExampleCountPerLeaf:50, NumberOfTrees:20, LearningRate:0.0303671, Shrinkage:0.06052992}  cache=-
|11   FastTreeTweedieRegression            -1.1966         10.68       208.58    14.44       6.3          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=LightGbmRegression{NumberOfIterations:50, LearningRate:0.07668552, NumberOfLeaves:14, MinimumExampleCountPerLeaf:20, UseCategoricalSplit:False, HandleMissingValue:True, MinimumExampleCountPerGroup:100, MaximumCategoricalSplitPointCount:32, CategoricalSmoothing:20, L2CategoricalRegularization:0.1, L2Regularization:1, L1Regularization:0.5}  cache=-
[Source=AutoML, Kind=Trace] 12	0.938340751959674	00:00:00.8737879	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=LightGbmRegression{NumberOfIterations:50, LearningRate:0.07668552, NumberOfLeaves:14, MinimumExampleCountPerLeaf:20, UseCategoricalSplit:False, HandleMissingValue:True, MinimumExampleCountPerGroup:100, MaximumCategoricalSplitPointCount:32, CategoricalSmoothing:20, L2CategoricalRegularization:0.1, L2Regularization:1, L1Regularization:0.5}  cache=-
|12   LightGbmRegression                    0.9383          0.48         5.85     2.42       0.9          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeRegression{NumberOfLeaves:120, MinimumExampleCountPerLeaf:10, NumberOfTrees:20, LearningRate:0.109081, Shrinkage:1.015716}  cache=-
[Source=AutoML, Kind=Trace] 13	0.921183176860345	00:00:00.7081387	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeRegression{NumberOfLeaves:120, MinimumExampleCountPerLeaf:10, NumberOfTrees:20, LearningRate:0.109081, Shrinkage:1.015716}  cache=-
|13   FastTreeRegression                    0.9212          1.22         7.48     2.74       0.7          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeTweedieRegression{NumberOfLeaves:96, MinimumExampleCountPerLeaf:10, NumberOfTrees:500, LearningRate:0.08892966, Shrinkage:0.1897559}  cache=-
[Source=AutoML, Kind=Trace] 14	0.949507872830848	00:00:09.4191209	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeTweedieRegression{NumberOfLeaves:96, MinimumExampleCountPerLeaf:10, NumberOfTrees:500, LearningRate:0.08892966, Shrinkage:0.1897559}  cache=-
|14   FastTreeTweedieRegression             0.9495          0.40         4.79     2.19       9.4          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=LightGbmRegression{NumberOfIterations:100, LearningRate:0.3486788, NumberOfLeaves:10, MinimumExampleCountPerLeaf:10, UseCategoricalSplit:False, HandleMissingValue:False, MinimumExampleCountPerGroup:100, MaximumCategoricalSplitPointCount:32, CategoricalSmoothing:1, L2CategoricalRegularization:0.1, L2Regularization:1, L1Regularization:0.5}  cache=-
[Source=AutoML, Kind=Trace] 15	0.947191861458305	00:00:01.3884214	xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=LightGbmRegression{NumberOfIterations:100, LearningRate:0.3486788, NumberOfLeaves:10, MinimumExampleCountPerLeaf:10, UseCategoricalSplit:False, HandleMissingValue:False, MinimumExampleCountPerGroup:100, MaximumCategoricalSplitPointCount:32, CategoricalSmoothing:1, L2CategoricalRegularization:0.1, L2Regularization:1, L1Regularization:0.5}  cache=-
|15   LightGbmRegression                    0.9472          0.41         5.01     2.24       1.4          0      |
[Source=AutoML, Kind=Trace] Evaluating pipeline xf=OneHotEncoding{ col=vendor_id:vendor_id col=payment_type:payment_type} xf=ColumnConcatenating{ col=Features:vendor_id,payment_type,rate_code,passenger_count,trip_time_in_secs,trip_distance} tr=FastTreeRegression{NumberOfLeaves:38, MinimumExampleCountPerLeaf:50, NumberOfTrees:20, LearningRate:0.2588671, Shrinkage:0.03743491}  cache=-

===============================================Experiment Results=================================================
------------------------------------------------------------------------------------------------------------------
|                                                     Summary                                                    |
------------------------------------------------------------------------------------------------------------------
|ML Task: regression                                                                                             |
|Dataset: taxi-fare-train.csv                                                                                    |
|Label : fare_amount                                                                                             |
|Total experiment time : 30.83 Secs                                                                              |
|Total number of models explored: 15                                                                             |
------------------------------------------------------------------------------------------------------------------
|                                              Top 5 models explored                                             |
------------------------------------------------------------------------------------------------------------------
|     Trainer                             RSquared Absolute-loss Squared-loss RMS-loss  Duration #Iteration      |
|1    FastTreeTweedieRegression             0.9495          0.40         4.79     2.19       9.4         14      |
|2    LightGbmRegression                    0.9472          0.41         5.01     2.24       1.4         15      |
|3    LightGbmRegression                    0.9451          0.41         5.22     2.28       1.1          2      |
|4    FastTreeRegression                    0.9440          0.42         5.32     2.31       1.1          3      |
|5    LightGbmRegression                    0.9383          0.48         5.85     2.42       0.9         12      |
------------------------------------------------------------------------------------------------------------------
Retrieving best pipeline ...
Generated trained model for consumption: /Users/mike/Code/AI/MLNET/myMLApp/SampleRegression/SampleRegression.Model/MLModel.zip
Generated C# code for model consumption: /Users/mike/Code/AI/MLNET/myMLApp/SampleRegression/SampleRegression.ConsoleApp
Check out log file for more information: /Users/mike/Code/AI/MLNET/myMLApp/SampleRegression/logs/debug_log.txt
